{
  "version": 5,
  "cmakeMinimumRequired": {"major": 3, "minor": 23, "patch": 0},
  "configurePresets": [
    {
      "name": "default",
      "displayName": "Default config using Ninja",
      "description": "Keeps defaults, uses Ninja, base for any of the other presets",
      "generator": "Ninja",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default",
      "cacheVariables": {},
      "environment": {"TEST_FILE_PATH": "${sourceDir}/testfiles"}
    },
    {
      "name": "no-webview",
      "inherits": "default",
      "displayName": "Disables web view",
      "description": "Same as default but disables web view",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default-no-webview",
      "cacheVariables": {
        "WEBVIEW_PROVIDER": {"type": "STRING", "value": "none"}
      }
    },
    {
      "name": "builtin-translations",
      "inherits": "default",
      "displayName": "Enables built-in translations",
      "description": "Same as default but enables built-in translations",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/built-in-translations",
      "cacheVariables": {
        "BUILTIN_TRANSLATIONS": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "clang",
      "inherits": "default",
      "displayName": "Use clang/clang++",
      "description": "Enforces use of clang/clang++ even when it is not the system default",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default-clang",
      "cacheVariables": {
        "CMAKE_C_COMPILER": {"type": "STRING", "value": "clang"},
        "CMAKE_CXX_COMPILER": {"type": "STRING", "value": "clang++"}
      }
    },
    {
      "name": "libc++",
      "inherits": "clang",
      "displayName": "Use clang/clang++ and libc++",
      "description": "Enforces use of clang/clang++ and libc++ even when it is not the system default",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default-clang-libc++",
      "cacheVariables": {
        "CMAKE_CXX_FLAGS": {"type": "STRING", "value": "$env{CXXFLAGS} -stdlib=libc++"}
      }
    },
    {
      "name": "no-kde",
      "inherits": "default",
      "displayName": "Disables KDE integrations",
      "description": "Same as default but disables KDE integrations",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default-no-kde",
      "cacheVariables": {
        "NO_PLASMOID": {"type": "BOOL", "value": "ON"},
        "NO_FILE_ITEM_ACTION_PLUGIN": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "qt6",
      "inherits": "default",
      "displayName": "Use Qt 6 (instead of Qt 5)",
      "description": "Same as default but configures use of Qt 6 (only relevant if project uses Qt)",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/default-qt6",
      "cacheVariables": {
        "QT_PACKAGE_PREFIX": {"type": "STRING", "value": "Qt6"},
        "KF_PACKAGE_PREFIX": {"type": "STRING", "value": "KF6"},
        "BUILD_WITH_QT6": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "ccache",
      "inherits": "default",
      "displayName": "Use ccache",
      "description": "Same as default but uses ccache",
      "cacheVariables": {
        "CMAKE_C_COMPILER_LAUNCHER": {"type": "STRING", "value": "ccache"},
        "CMAKE_CXX_COMPILER_LAUNCHER": {"type": "STRING", "value": "ccache"}
      }
    },
    {
      "name": "devel",
      "inherits": "ccache",
      "displayName": "Generic development config",
      "description": "Development build with testsuite using ccache with many warnings enabled and treated as errors",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel",
      "cacheVariables": {
        "ENABLE_DEVEL_DEFAULTS": {"type": "BOOL", "value": "ON"},
        "CONFIGURATION_NAME": {"type": "STRING", "value": "devel"},
        "CONFIGURATION_PACKAGE_SUFFIX": {"type": "STRING", "value": "-devel"},
        "CONFIGURATION_PACKAGE_SUFFIX_QTUTILITIES": {"type": "STRING", "value": "-devel"},
        "CONFIGURATION_PACKAGE_SUFFIX_QTFORKAWESOME": {"type": "STRING", "value": "-devel"},
        "CONFIGURATION_TARGET_SUFFIX": {"type": "STRING", "value": "devel"}
      }
    },
    {
      "name": "devel-no-tests",
      "inherits": ["devel"],
      "displayName": "Generic development config (no tests by default)",
      "description": "Development build using ccache with many warnings enabled and treated as errors",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel",
      "cacheVariables": {
        "EXCLUDE_TESTS_FROM_ALL": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "devel-clang",
      "inherits": ["devel", "clang"],
      "displayName": "Development config using clang",
      "description": "Combination of devel and libc++",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-clang"
    },
    {
      "name": "devel-libc++",
      "inherits": ["devel", "libc++"],
      "displayName": "Development config using libc++",
      "description": "Combination of devel and libc++",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-libc++",
      "cacheVariables": {
        "ENABLE_CPP_UNIT": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "devel-qt6",
      "inherits": ["qt6", "devel"],
      "displayName": "Generic development config using Qt 6",
      "description": "Same as devel but configures use of Qt 6 (only relevant if project uses Qt)",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-qt6",
      "cacheVariables": {
        "QT_PACKAGE_PREFIX": {"type": "STRING", "value": "Qt6"},
        "QT_MAJOR_VERSION": {"type": "STRING", "value": "6"},
        "KF_PACKAGE_PREFIX": {"type": "STRING", "value": "KF6"},
        "BUILD_WITH_QT6": {"type": "BOOL", "value": "ON"},
        "NO_PLASMOID": {"type": "BOOL", "value": "ON"},
        "NO_FILE_ITEM_ACTION_PLUGIN": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "devel-unity",
      "inherits": ["devel-qt6"],
      "displayName": "Development config creating a unity build using Qt 6",
      "description": "Same as devel-qt6 but configures makes a unity build",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-unity",
      "cacheVariables": {
        "CMAKE_UNITY_BUILD": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "devel-clang-qt6",
      "inherits": ["qt6", "devel-clang"],
      "displayName": "Development config using clang and Qt 6",
      "description": "Combination of qt6 and devel-clang",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-clang-qt6"
    },
    {
      "name": "devel-libc++-qt6",
      "inherits": ["qt6", "devel-libc++"],
      "displayName": "Development config using libc++ and Qt 6",
      "description": "Combination of qt6 and devel-libc++",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/devel-libc++-qt6"
    },
    {
      "name": "debug",
      "inherits": "devel",
      "displayName": "Generic debug build with development config",
      "description": "Same as devel but creates a debug build",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/debug",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Debug"}
      }
    },
    {
      "name": "debug-qt6",
      "inherits": ["debug", "devel-qt6"],
      "displayName": "Generic debug build with development config using Qt 6",
      "description": "Same as devel-qt6 but creates a debug build",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/debug-qt6"
    },
    {
      "name": "debug-kde",
      "inherits": "debug-qt6",
      "displayName": "Generic debug build with development config with KDE integrations enabled",
      "description": "Same as debug-qt6 but with KDE integrations enabled",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/debug-kde",
      "cacheVariables": {
        "NO_PLASMOID": {"type": "BOOL", "value": "OFF"},
        "NO_FILE_ITEM_ACTION_PLUGIN": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "debug-kde-custom",
      "inherits": "debug-kde",
      "displayName": "Generic debug build with development config using custom KDE build",
      "description": "Same as debug-kde but with custom KDE installation from KDE_INSTALL_DIR",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/debug-kde-custom",
      "cacheVariables": {
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "$env{KDE_INSTALL_DIR}"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "$env{KDE_INSTALL_DIR}"}
      }
    },
    {
      "name": "arch-*-w64-mingw32",
      "inherits": ["no-webview", "no-kde"],
      "displayName": "Target *-w64-mingw32 using Arch Linux's mingw-w64 packaging",
      "description": "Build targeting *-w64-mingw32, paths and flags are specific to Arch Linux's mingw-w64 packaging",
      "environment": {
        "CPPFLAGS": "-D_FORTIFY_SOURCE=3 -D_GLIBCXX_ASSERTIONS",
        "CFLAGS": "$env{CPPFLAGS} -O2 -pipe -fno-plt -fexceptions --param=ssp-buffer-size=4 -Wformat -Werror=format-security -fcf-protection",
        "CXXFLAGS": "$env{CPPFLAGS} -O2 -pipe -fno-plt -fexceptions --param=ssp-buffer-size=4 -Wformat -Werror=format-security -fcf-protection",
        "LDFLAGS": "-Wl,-O1,--sort-common,--as-needed -fstack-protector"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "ON"},
        "VERSIONED_MINGW_LIBRARIES": {"type": "BOOL", "value": "ON"},
        "ENABLE_TARGETS_FOR_MINGW_CROSS_PACKAGING": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "arch-i686-w64-mingw32",
      "inherits": "arch-*-w64-mingw32",
      "displayName": "Target i686-w64-mingw32 using Arch Linux's mingw-w64 packaging",
      "description": "Build targeting i686-w64-mingw32, paths and flags are specific to Arch Linux's mingw-w64 packaging",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32",
      "toolchainFile": "/usr/share/mingw/toolchain-i686-w64-mingw32.cmake",
      "environment": {
        "CROSS_TOOL_PREFIX": "i686-w64-mingw32-",
        "CROSS_INSTALL_PREFIX": "/usr/i686-w64-mingw32",
        "PATH": "$env{CROSS_INSTALL_PREFIX}/bin:$penv{PATH}"
      },
      "cacheVariables": {
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_CROSSCOMPILING_EMULATOR": {"type": "PATH", "value": "/usr/bin/i686-w64-mingw32-wine"}
      }
    },
    {
      "name": "arch-x86_64-w64-mingw32",
      "inherits": "arch-*-w64-mingw32",
      "displayName": "Target x86_64-w64-mingw32 using Arch Linux's mingw-w64 packaging",
      "description": "Build targeting x86_64-w64-mingw32, paths and flags are specific to Arch Linux's mingw-w64 packaging",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32",
      "toolchainFile": "/usr/share/mingw/toolchain-x86_64-w64-mingw32.cmake",
      "environment": {
        "CROSS_TOOL_PREFIX": "x86_64-w64-mingw32-",
        "CROSS_INSTALL_PREFIX": "/usr/x86_64-w64-mingw32",
        "PATH": "$env{CROSS_INSTALL_PREFIX}/bin:$penv{PATH}"
      },
      "cacheVariables": {
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_CROSSCOMPILING_EMULATOR": {"type": "PATH", "value": "/usr/bin/x86_64-w64-mingw32-wine"}
      }
    },
    {
      "name": "arch-i686-w64-mingw32-static",
      "inherits": ["arch-i686-w64-mingw32", "builtin-translations"],
      "displayName": "Target i686-w64-mingw32 using Arch Linux's mingw-w64 packaging (static)",
      "description": "Build targeting i686-w64-mingw32, paths and flags are specific to Arch Linux's mingw-w64 packaging",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-static",
      "toolchainFile": "/usr/share/mingw/toolchain-i686-w64-mingw32-static.cmake",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "CMAKE_FIND_LIBRARY_SUFFIXES": {"type": "STRING", "value": ".a;.lib"},
        "STATIC_LIBRARY_LINKAGE": {"type": "BOOL", "value": "ON"},
        "STATIC_LINKAGE": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "arch-x86_64-w64-mingw32-static",
      "inherits": ["arch-x86_64-w64-mingw32", "builtin-translations"],
      "displayName": "Target x86_64-w64-mingw32 using Arch Linux's mingw-w64 packaging (static)",
      "description": "Build targeting x86_64-w64-mingw32, paths and flags are specific to Arch Linux's mingw-w64 packaging",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-static",
      "toolchainFile": "/usr/share/mingw/toolchain-x86_64-w64-mingw32-static.cmake",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "CMAKE_FIND_LIBRARY_SUFFIXES": {"type": "STRING", "value": ".a;.lib"},
        "STATIC_LIBRARY_LINKAGE": {"type": "BOOL", "value": "ON"},
        "STATIC_LINKAGE": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "arch-i686-w64-mingw32-qt6",
      "inherits": ["qt6", "arch-i686-w64-mingw32"],
      "displayName": "Combination of qt6 and arch-i686-w64-mingw32",
      "description": "See description of qt6 and arch-i686-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-qt6"
    },
    {
      "name": "arch-x86_64-w64-mingw32-qt6",
      "inherits": ["qt6", "arch-x86_64-w64-mingw32"],
      "displayName": "Combination of qt6 and arch-x86_64-w64-mingw32",
      "description": "See description of qt6 and arch-x86_64-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-qt6"
    },
    {
      "name": "arch-i686-w64-mingw32-static-qt6",
      "inherits": ["qt6", "arch-i686-w64-mingw32-static"],
      "displayName": "Combination of qt6 and arch-i686-w64-mingw32-static",
      "description": "See description of qt6 and arch-i686-w64-mingw32-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-static-qt6"
    },
    {
      "name": "arch-x86_64-w64-mingw32-static-qt6",
      "inherits": ["qt6", "arch-x86_64-w64-mingw32-static"],
      "displayName": "Combination of qt6 and arch-x86_64-w64-mingw32-static",
      "description": "See description of qt6 and arch-x86_64-w64-mingw32-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-static-qt6"
    },
    {
      "name": "arch-i686-w64-mingw32-devel",
      "inherits": ["devel", "arch-i686-w64-mingw32"],
      "displayName": "Combination of devel and arch-i686-w64-mingw32",
      "description": "See descriptions of devel and arch-i686-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-devel"
    },
    {
      "name": "arch-x86_64-w64-mingw32-devel",
      "inherits": ["devel", "arch-x86_64-w64-mingw32"],
      "displayName": "Combination of devel and arch-x86_64-w64-mingw32",
      "description": "See descriptions of devel and arch-x86_64-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-devel"
    },
    {
      "name": "arch-i686-w64-mingw32-devel-qt6",
      "inherits": ["qt6", "devel", "arch-i686-w64-mingw32"],
      "displayName": "Combination of qt6, devel and arch-i686-w64-mingw32",
      "description": "See descriptions of devel and arch-i686-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-devel"
    },
    {
      "name": "arch-x86_64-w64-mingw32-devel-qt6",
      "inherits": ["qt6", "devel", "arch-x86_64-w64-mingw32"],
      "displayName": "Combination of qt6, devel and arch-x86_64-w64-mingw32",
      "description": "See descriptions of devel and arch-x86_64-w64-mingw32",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-devel"
    },
    {
      "name": "arch-i686-w64-mingw32-static-devel-qt6",
      "inherits": ["qt6", "devel", "arch-i686-w64-mingw32-static"],
      "displayName": "Combination of qt6, devel and arch-i686-w64-mingw32-static",
      "description": "See descriptions of devel and arch-i686-w64-mingw32-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-i686-w64-mingw32-devel"
    },
    {
      "name": "arch-x86_64-w64-mingw32-static-devel-qt6",
      "inherits": ["qt6", "devel", "arch-x86_64-w64-mingw32-static"],
      "displayName": "Combination of qt6, devel and arch-x86_64-w64-mingw32-static",
      "description": "See descriptions of devel and arch-x86_64-w64-mingw32-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-x86_64-w64-mingw32-devel"
    },
    {
      "name": "arch-mingw-w64-clang",
      "inherits": ["no-webview", "no-kde", "qt6"],
      "displayName": "Target *-w64-mingw32 using LLVM/Clang provided by Arch Linux and additional mingw-w64-clang-* packaging (invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" before invoking CMake)",
      "description": "Build targeting Windows, paths and flags are specific to Arch Linux packaging, invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-mingw-w64-clang-$env{MINGW_W64_CLANG_TARGET}",
      "toolchainFile": "/usr/share/mingw/toolchain-$env{MINGW_W64_CLANG_TARGET}.cmake",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Release"},
        "CMAKE_C_FLAGS_RELEASE": {"type": "STRING", "value": "$env{CFLAGS}"},
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}/include"},
        "CMAKE_CXX_FLAGS_RELEASE": {"type": "STRING", "value": "$env{CXXFLAGS}"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}/include"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}"},
        "CMAKE_INSTALL_LIBDIR": {"type": "PATH", "value": "lib"},
        "CMAKE_CROSSCOMPILING_EMULATOR": {"type": "PATH", "value": "/usr/bin/$env{MINGW_W64_CLANG_TARGET}-wine"},
        "INCLUDE_INSTALL_DIR": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}/include"},
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "ON"},
        "VERSIONED_MINGW_LIBRARIES": {"type": "BOOL", "value": "ON"},
        "ENABLE_TARGETS_FOR_MINGW_CROSS_PACKAGING": {"type": "BOOL", "value": "ON"},
        "ENABLE_CPP_UNIT": {"type": "BOOL", "value": "OFF"},
        "USE_BOOST_PROCESS": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "arch-mingw-w64-clang-devel",
      "inherits": ["arch-mingw-w64-clang", "devel-no-tests"],
      "displayName": "Target *-w64-mingw32 using LLVM/Clang provided by Arch Linux and additional mingw-w64-clang-* packaging (invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" before invoking CMake)",
      "description": "Build targeting Windows, paths and flags are specific to Arch Linux packaging, invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-mingw-w64-clang-devel-$env{MINGW_W64_CLANG_TARGET}"
    },
    {
      "name": "arch-mingw-w64-clang-static",
      "inherits": ["arch-mingw-w64-clang"],
      "displayName": "Target *-w64-mingw32 using LLVM/Clang provided by Arch Linux and additional mingw-w64-clang-* packaging (invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" before invoking CMake)",
      "description": "Build targeting Windows preferring static libraries, paths and flags are specific to Arch Linux packaging, invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-mingw-w64-clang-static-$env{MINGW_W64_CLANG_TARGET}",
      "toolchainFile": "/usr/share/mingw/toolchain-$env{MINGW_W64_CLANG_TARGET}-static.cmake",
      "cacheVariables": {
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "/usr/$env{MINGW_W64_CLANG_TARGET}/static;/usr/$env{MINGW_W64_CLANG_TARGET}"},
        "CMAKE_FIND_LIBRARY_SUFFIXES": {"type": "STRING", "value": ".a;.lib"},
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "STATIC_LIBRARY_LINKAGE": {"type": "BOOL", "value": "ON"},
        "STATIC_LINKAGE": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "arch-mingw-w64-clang-devel-static",
      "inherits": ["arch-mingw-w64-clang-static", "devel-no-tests"],
      "displayName": "Target *-w64-mingw32 using LLVM/Clang provided by Arch Linux and additional mingw-w64-clang-* packaging (invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" before invoking CMake)",
      "description": "Build targeting Windows preferring static libraries, paths and flags are specific to Arch Linux packaging, invoke e.g. \"source mingw-clang-env aarch64-w64-mingw32\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-mingw-w64-clang-devel-static-$env{MINGW_W64_CLANG_TARGET}"
    },
    {
      "name": "arch-static-compat",
      "inherits": ["no-webview", "no-kde", "qt6", "builtin-translations"],
      "displayName": "Target static-compat environment for Arch Linux",
      "description": "Build using static-compat packages for Arch Linux found in my PKGBUILDs repo",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-static-compat",
      "environment": {
        "CROSS_INSTALL_PREFIX": "/usr/static-compat",
        "CC": "$env{CROSS_INSTALL_PREFIX}/bin/gcc",
        "CXX": "$env{CROSS_INSTALL_PREFIX}/bin/g++",
        "CFLAGS": "$penv{CFLAGS} -fPIC -static-libgcc -static-libstdc++",
        "CXXFLAGS": "$penv{CXXFLAGS} -fPIC -static-libgcc -static-libstdc++",
        "LDFLAGS": "$penv{LDFLAGS} -static-libgcc -static-libstdc++",
        "PKG_CONFIG_PATH": "$env{CROSS_INSTALL_PREFIX}/lib/pkgconfig:$env{CROSS_INSTALL_PREFIX}/share/pkgconfig",
        "PKG_CONFIG_SYSROOT_DIR": "$env{CROSS_INSTALL_PREFIX}",
        "PKG_CONFIG_LIBDIR": "$env{CROSS_INSTALL_PREFIX}/lib/pkgconfig:$env{CROSS_INSTALL_PREFIX}/share/pkgconfig",
        "PATH": "$env{CROSS_INSTALL_PREFIX}/bin:$penv{PATH}"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/include"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}"},
        "CMAKE_SKIP_BUILD_RPATH": {"type": "BOOL", "value": "ON"},
        "CMAKE_SKIP_INSTALL_RPATH": {"type": "BOOL", "value": "ON"},
        "CMAKE_DISABLE_FIND_PACKAGE_harfbuzz": {"type": "BOOL", "value": "ON"},
        "Boost_USE_STATIC_RUNTIME": {"type": "BOOL", "value": "ON"},
        "GLIB2_USE_PKG_CONFIG": {"type": "BOOL", "value": "ON"},
        "WAYLAND_USE_PKG_CONFIG": {"type": "BOOL", "value": "ON"},
        "OPENGL_glu_LIBRARY": {"type": "PATH", "value": "$env{CROSS_INSTALL_PREFIX}/lib/libGLU.a"},
        "USE_BUNDLED_RTMIDI": {"type": "BOOL", "value": "ON"}
      }
    },
    {
      "name": "arch-static-compat-devel",
      "inherits": ["devel", "arch-static-compat"],
      "displayName": "Combination of devel and arch-static-compat",
      "description": "See descriptions of devel and arch-static-compat",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-static-compat-devel"
    },
    {
      "name": "arch-android",
      "inherits": ["no-webview", "no-kde", "qt6", "builtin-translations"],
      "displayName": "Target *-linux-android using Arch Linux's Android packaging (invoke e.g. \"source android-env aarch64\" before invoking CMake)",
      "description": "Build targeting Android, paths and flags are specific to Arch Linux's Android packaging, invoke e.g. \"source android-env aarch64\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-android-$env{ANDROID_ABI}",
      "toolchainFile": "$env{ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake",
      "environment": {
        "PATH": "$env{ANDROID_PREFIX}/bin:/usr/lib/jvm/java-17-openjdk/bin:$penv{PATH}"
      },
      "cacheVariables": {
        "ANDROID_ABI": {"type": "STRING", "value": "$env{ANDROID_ABI}"},
        "ANDROID_SDK_ROOT": {"type": "STRING", "value": "$env{ANDROID_HOME}"},
        "ANDROID_NDK": {"type": "STRING", "value": "$env{ANDROID_NDK_HOME}"},
        "ANDROID_NATIVE_API_LEVEL": {"type": "STRING", "value": "$env{ANDROID_MINIMUM_PLATFORM}"},
        "ANDROID_TOOLCHAIN": {"type": "STRING", "value": "clang"},
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Release"},
        "CMAKE_C_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_CFLAGS}"},
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "CMAKE_CXX_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_CXXFLAGS}"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "CMAKE_SHARED_LINKER_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_LDFLAGS}"},
        "CMAKE_MODULE_LINKER_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_LDFLAGS}"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "$env{ANDROID_PREFIX}"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "$env{ANDROID_PREFIX}"},
        "CMAKE_INSTALL_LIBDIR": {"type": "PATH", "value": "lib"},
        "INCLUDE_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "LIB_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_LIB}"},
        "SYSCONF_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_ETC}"},
        "SHARE_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_SHARE}"},
        "PKG_CONFIG_EXECUTABLE": {"type": "FILEPATH", "value": "/usr/bin/$env{ANDROID_PKGCONFIG}"}
      }
    },
    {
      "name": "arch-wasm",
      "inherits": ["no-webview", "no-kde", "qt6"],
      "displayName": "Target wasm32-unknown-emscripten using Arch Linux's packaging",
      "description": "Build targeting WebAssembly via Emscripten, paths and flags are specific to Arch Linux's packaging",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/arch-wasm",
      "toolchainFile": "/usr/lib/emscripten/cmake/Modules/Platform/Emscripten.cmake",
      "environment": {
        "PATH": "/usr/lib/emscripten:$penv{PATH}",
        "EMSDK": "/usr/lib/emscripten"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Release"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "/usr/lib/emscripten/system"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "/usr/lib/emscripten/system"},
        "CMAKE_C_FLAGS": {"type": "STRING", "value": "-pthread"},
        "CMAKE_CXX_FLAGS": {"type": "STRING", "value": "-pthread"},
        "CMAKE_CROSSCOMPILING_EMULATOR": {"type": "FILEPATH", "value": "/usr/bin/node"},
        "QT_HOST_PATH": {"type": "STRING", "value": "/usr"},
        "QT_INCLUDE_DIRS_NO_SYSTEM": {"type": "BOOL", "value": "ON"},
        "DBUS_NOTIFICATIONS": {"type": "BOOL", "value": "OFF"},
        "SYSTEMD_SUPPORT": {"type": "BOOL", "value": "OFF"},
        "NO_CLI": {"type": "BOOL", "value": "ON"},
        "USE_NATIVE_FILE_BUFFER": {"type": "BOOL", "value": "OFF"},
        "USE_BOOST_PROCESS": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "win-x64-msvc-static",
      "inherits": ["no-webview", "no-kde", "qt6", "builtin-translations"],
      "displayName": "Target x64-windows-static on Windows",
      "description": "Build on Windows targeting x64-windows-static using MSVC, Qt 6 (for Qt libs and CMake/Ninja), vcpkg (for other dependencies) and MSYS2 (for Perl, Go, ffmpeg and other tools)",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/win-x64-msvc-static",
      "environment": {
        "INCLUDE": "$env{MSVC_ROOT}/include;$env{MSVC_ROOT}/ATLMFC/include;$env{WIN_KITS_ROOT}/include/$env{WIN_KITS_VERSION}/ucrt;$env{WIN_KITS_ROOT}//include/$env{WIN_KITS_VERSION}//um;$env{WIN_KITS_ROOT}//include/$env{WIN_KITS_VERSION}//shared;$env{WIN_KITS_ROOT}/include/$env{WIN_KITS_VERSION}//winrt;$env{WIN_KITS_ROOT}/include/$env{WIN_KITS_VERSION}//cppwinrt",
        "LIB": "$env{MSVC_ROOT}/ATLMFC/lib/x64;$env{MSVC_ROOT}/lib/x64;$env{WIN_KITS_ROOT}/lib/$env{WIN_KITS_VERSION}/ucrt/x64;$env{WIN_KITS_ROOT}/lib/$env{WIN_KITS_VERSION}//um/x64",
        "LIBPATH": "$env{MSVC_ROOT}/ATLMFC/lib/x64;$env{MSVC_ROOT}/lib/x64;$env{WIN_KITS_ROOT}/lib/$env{WIN_KITS_VERSION}/ucrt/x64;$env{WIN_KITS_ROOT}/lib/$env{WIN_KITS_VERSION}/um/x64",
        "MSYS2_PREFIX_PATH": "$env{MSYS2_ROOT}$env{MSYS2_PREFIX}",
        "GOROOT": "$env{MSYS2_PREFIX_PATH}/lib/go"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": {"type": "BOOL", "value": "OFF"},
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Release"},
        "CMAKE_TOOLCHAIN_FILE": {"type": "FILEPATH", "value": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "$env{VCPKG_ROOT}/installed/x64-windows-static"},
        "CMAKE_PREFIX_PATH": {"type": "PATH", "value": "$env{QT_ROOT}"},
        "CMAKE_MAKE_PROGRAM": {"type": "FILEPATH", "value": "$env{QT_TOOLS}/Ninja/ninja.exe"},
        "CMAKE_AR_COMPILER": {"type": "FILEPATH", "value": "$env{MSVC_ROOT}/bin/Hostx64/x64/lib.exe"},
        "CMAKE_C_COMPILER": {"type": "FILEPATH", "value": "$env{MSVC_ROOT}/bin/HostX64/x64/cl.exe"},
        "CMAKE_CXX_COMPILER": {"type": "FILEPATH", "value": "$env{MSVC_ROOT}/bin/HostX64/x64/cl.exe"},
        "CMAKE_RC_COMPILER": {"type": "FILEPATH", "value": "$env{WIN_KITS_ROOT}/bin/$env{WIN_KITS_VERSION}/x64/rc.exe"},
        "CMAKE_LINKER": {"type": "FILEPATH", "value": "$env{MSVC_ROOT}/bin/Hostx64/x64/link.exe"},
        "CMAKE_MT": {"type": "FILEPATH", "value": "$env{WIN_KITS_ROOT}/bin/$env{WIN_KITS_VERSION}/x64/mt.exe"},
        "CMAKE_MSVC_RUNTIME_LIBRARY": {"type": "STRING", "value": "MultiThreaded$<$<CONFIG:Debug>:Debug>"},
        "CMAKE_CXX_FLAGS_DEBUG": {"type": "STRING", "value": "/MTd /Zi /Ob0 /Od /RTC1"},
        "CMAKE_CXX_FLAGS_RELEASE": {"type": "STRING", "value": "/MT /O2 /Ob2 /DNDEBUG"},
        "CMAKE_CXX_FLAGS_MINSIZEREL": {"type": "STRING", "value": "/MT /O1 /Ob1 /DNDEBUG"},
        "CMAKE_CXX_FLAGS_RELWITHDEBINFO": {"type": "STRING", "value": "/MT /Zi /O2 /Ob1 /DNDEBUG"},
        "VCPKG_TARGET_TRIPLET": {"type": "STRING", "value": "x64-windows-static"},
        "PERL_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_ROOT}/usr/bin/perl.exe"},
        "DOXYGEN_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_PREFIX_PATH}/bin/doxygen.exe"},
        "CLANG_FORMAT_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_PREFIX_PATH}/bin/clang-format.exe"},
        "GO_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_PREFIX_PATH}/bin/go.exe"},
        "FFMPEG_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_PREFIX_PATH}/bin/ffmpeg.exe"},
        "REALPATH_BIN": {"type": "FILEPATH", "value": "$env{MSYS2_ROOT}/usr/bin/realpath.exe"},
        "FORCE_EXTERNAL_ICONV": {"type": "BOOL", "value": "ON"},
        "CPP_UNIT_LIB": {"type": "FILEPATH", "value": "$env{VCPKG_ROOT}/installed/x64-windows-static/lib/cppunit.lib"},
        "CPP_UNIT_INCLUDE_DIR": {"type": "PATH", "value": "$env{VCPKG_ROOT}/installed/x64-windows-static/include"},
        "Vulkan_INCLUDE_DIR": {"type": "PATH", "value": ""},
        "QUICK_GUI": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "win-x64-msvc-static-devel",
      "inherits": ["win-x64-msvc-static", "devel"],
      "displayName": "Combination of devel and win-x64-msvc-static",
      "description": "See descriptions of devel and win-x64-msvc-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/win-x64-msvc-static-devel",
      "cacheVariables": {
        "CLANG_FORMAT_ENABLED": {"type": "BOOL", "value": "OFF"},
        "CLANG_TIDY_ENABLED": {"type": "BOOL", "value": "OFF"},
        "CMAKE_FORMAT_ENABLED": {"type": "BOOL", "value": "OFF"}
      }
    },
    {
      "name": "win-x64-msvc-static-debug",
      "inherits": ["debug", "win-x64-msvc-static-devel"],
      "displayName": "Combination of debug and win-x64-msvc-static",
      "description": "See descriptions of debug and win-x64-msvc-static",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/win-x64-msvc-static-debug",
      "cacheVariables": {
        "CMAKE_C_COMPILER_LAUNCHER": {"type": "STRING", "value": ""},
        "CMAKE_CXX_COMPILER_LAUNCHER": {"type": "STRING", "value": ""},
        "CPP_UNIT_LIB": {"type": "FILEPATH", "value": "$env{VCPKG_ROOT}/installed/x64-windows-static/debug/lib/cppunitd.lib"}
      }
    },
    {
      "name": "win-android",
      "inherits": ["no-webview", "no-kde", "qt6", "builtin-translations"],
      "displayName": "Target *-linux-android using MSYS2 and Arch Linux's Android packaging (invoke e.g. \"source android-env aarch64\" before invoking CMake)",
      "description": "Build targeting Android, paths and flags are specific to MSYS2 and Arch Linux's Android packaging, invoke e.g. \"source android-env aarch64\" for required environment variables",
      "binaryDir": "$env{BUILD_DIR}/${sourceDirName}/win-android-$env{ANDROID_ABI}",
      "toolchainFile": "$env{ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake",
      "environment": {
        "ANDROID_EXTERNAL_LIBS": "/opt/android-libs",
        "PATH": "$env{MSYS2_ROOT}/$env{ANDROID_PREFIX}/bin:$env{ANDROID_STUDIO_HOME}/jbr/bin:$penv{PATH}",
        "JAVA_HOME": "$env{ANDROID_STUDIO_HOME}/jbr"
      },
      "cacheVariables": {
        "ANDROID_ABI": {"type": "STRING", "value": "$env{ANDROID_ABI}"},
        "ANDROID_SDK_ROOT": {"type": "STRING", "value": "$env{ANDROID_HOME}"},
        "ANDROID_NDK": {"type": "STRING", "value": "$env{ANDROID_NDK_HOME}"},
        "ANDROID_NATIVE_API_LEVEL": {"type": "STRING", "value": "$env{ANDROID_MINIMUM_PLATFORM}"},
        "ANDROID_TOOLCHAIN": {"type": "STRING", "value": "clang"},
        "CMAKE_BUILD_TYPE": {"type": "STRING", "value": "Release"},
        "CMAKE_C_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_CFLAGS}"},
        "CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "CMAKE_CXX_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_CXXFLAGS}"},
        "CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "CMAKE_SHARED_LINKER_FLAGS_RELEASE": {"type": "STRING", "value": "$env{ANDROID_LDFLAGS}"},
        "CMAKE_FIND_ROOT_PATH": {"type": "PATH", "value": "$env{QT_PLATFORMS_ROOT}/android_$env{QT_ANDROID_ARCH};$env{ANDROID_PREFIX}"},
        "CMAKE_PREFIX_PATH": {"type": "PATH", "value": "$env{ANDROID_PREFIX}"},
        "CMAKE_INSTALL_PREFIX": {"type": "PATH", "value": "$env{ANDROID_PREFIX}"},
        "CMAKE_INSTALL_LIBDIR": {"type": "PATH", "value": "lib"},
        "Iconv_INCLUDE_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "Iconv_LIBRARY": {"type": "PATH", "value": "$env{ANDROID_PREFIX_LIB}/lib/libiconv.a"},
        "INCLUDE_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_INCLUDE}"},
        "LIB_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_LIB}"},
        "SYSCONF_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_ETC}"},
        "SHARE_INSTALL_DIR": {"type": "PATH", "value": "$env{ANDROID_PREFIX_SHARE}"},
        "PKG_CONFIG_EXECUTABLE": {"type": "FILEPATH", "value": "$env{MSYS2_ROOT}/usr/bin/$env{ANDROID_PKGCONFIG}"}
      }
    }
  ],
  "buildPresets": [
    {"name": "default", "configurePreset": "default"},
    {"name": "libc++", "configurePreset": "libc++"},
    {"name": "qt6", "configurePreset": "qt6"},
    {"name": "devel", "configurePreset": "devel"},
    {"name": "devel-clang", "configurePreset": "devel-clang"},
    {"name": "devel-libc++", "configurePreset": "devel-libc++"},
    {"name": "devel-qt6", "configurePreset": "devel-qt6"},
    {"name": "devel-unity", "configurePreset": "devel-unity"},
    {"name": "devel-clang-qt6", "configurePreset": "devel-clang-qt6"},
    {"name": "devel-libc++-qt6", "configurePreset": "devel-libc++-qt6"},
    {"name": "debug", "configurePreset": "debug"},
    {"name": "debug-qt6", "configurePreset": "debug-qt6"},
    {"name": "debug-kde", "configurePreset": "debug-kde"},
    {"name": "debug-kde-custom", "configurePreset": "debug-kde-custom"},
    {"name": "arch-i686-w64-mingw32", "configurePreset": "arch-i686-w64-mingw32"},
    {"name": "arch-x86_64-w64-mingw32", "configurePreset": "arch-x86_64-w64-mingw32"},
    {"name": "arch-i686-w64-mingw32-static", "configurePreset": "arch-i686-w64-mingw32-static"},
    {"name": "arch-x86_64-w64-mingw32-static", "configurePreset": "arch-x86_64-w64-mingw32-static"},
    {"name": "arch-i686-w64-mingw32-qt6", "configurePreset": "arch-i686-w64-mingw32-qt6"},
    {"name": "arch-x86_64-w64-mingw32-qt6", "configurePreset": "arch-x86_64-w64-mingw32-qt6"},
    {"name": "arch-i686-w64-mingw32-static-qt6", "configurePreset": "arch-i686-w64-mingw32-static-qt6"},
    {"name": "arch-x86_64-w64-mingw32-static-qt6", "configurePreset": "arch-x86_64-w64-mingw32-static-qt6"},
    {"name": "arch-i686-w64-mingw32-devel", "configurePreset": "arch-i686-w64-mingw32-devel"},
    {"name": "arch-x86_64-w64-mingw32-devel", "configurePreset": "arch-x86_64-w64-mingw32-devel"},
    {"name": "arch-i686-w64-mingw32-devel-qt6", "configurePreset": "arch-i686-w64-mingw32-devel-qt6"},
    {"name": "arch-x86_64-w64-mingw32-devel-qt6", "configurePreset": "arch-x86_64-w64-mingw32-devel-qt6"},
    {"name": "arch-i686-w64-mingw32-static-devel-qt6", "configurePreset": "arch-i686-w64-mingw32-static-devel-qt6"},
    {"name": "arch-x86_64-w64-mingw32-static-devel-qt6", "configurePreset": "arch-x86_64-w64-mingw32-static-devel-qt6"},
    {"name": "arch-mingw-w64-clang", "configurePreset": "arch-mingw-w64-clang"},
    {"name": "arch-mingw-w64-clang-devel", "configurePreset": "arch-mingw-w64-clang-devel"},
    {"name": "arch-mingw-w64-clang-static", "configurePreset": "arch-mingw-w64-clang-static"},
    {"name": "arch-mingw-w64-clang-devel-static", "configurePreset": "arch-mingw-w64-clang-devel-static"},
    {"name": "arch-static-compat", "configurePreset": "arch-static-compat"},
    {"name": "arch-static-compat-devel", "configurePreset": "arch-static-compat-devel"},
    {"name": "arch-android", "configurePreset": "arch-android"},
    {"name": "arch-wasm", "configurePreset": "arch-wasm"},
    {"name": "win-x64-msvc-static", "configurePreset": "win-x64-msvc-static"},
    {"name": "win-x64-msvc-static-devel", "configurePreset": "win-x64-msvc-static-devel"},
    {"name": "win-x64-msvc-static-debug", "configurePreset": "win-x64-msvc-static-debug"},
    {"name": "win-android", "configurePreset": "win-android"}
  ],
  "testPresets": [
    {
      "name": "default",
      "configurePreset": "default",
      "output": {"outputOnFailure": true},
      "execution": {"noTestsAction": "error", "stopOnFailure": true}
    }
  ]
}
